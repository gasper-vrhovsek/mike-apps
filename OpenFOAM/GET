#!/bin/sh

VERSION=2.4.0
BASEDIR=$PWD
ROOTFS=$BASEDIR/ROOTFS
SRCDIR=$BASEDIR/OpenFOAM-$VERSION

# enable parallel build
export MAKEFLAGS="-j `nproc`"

# Check whether we need to download the tarbalj0j0
if [ ! -f OpenFOAM-$VERSION.tgz ]; then
    wget http://downloads.sourceforge.net/foam/OpenFOAM-$VERSION.tgz
fi
# Extract the target version
tar zxf OpenFOAM-$VERSION.tgz

## Patch bashrc to request debug compilation.
#cd $SRCDIR
#patch -p1 < $BASEDIR/patches/debug.patch

# OpenFOAM should not call exit() - in OSv exit shutdowns whole VM
cd $SRCDIR
patch -p1 < $BASEDIR/patches/exit.patch

# Set OpenFOAM's environment variables required to build the package. You should change this to cshrc if
# that's the shell you are using.
export FOAM_INST_DIR=$BASEDIR
. $SRCDIR/etc/bashrc

# First, compile the wmake used to build OpenFOAM sources.
cd $SRCDIR/wmake/src
make

# Patch the solidMixtureProperties library
cd $SRCDIR
patch -p1 < $BASEDIR/patches/solidMixtureProperties-dependency.patch

# Make the OpenFOAM library
cd $SRCDIR/src
./Allwmake

# Go and build the simpleFoam
# First regular Linux executable simpleFoam, capture its build command,
# then re-build shared object simpleFoam.so.
cd $SRCDIR/applications/solvers/incompressible/simpleFoam
DESTF=$SRCDIR/platforms/linux64GccDPOpt/bin/simpleFoam
rm -f $DESTF
# wmake will print used make command to stdout.
# Capture it, then transform it to build shared object instead of executable.
# When running VAR=`wmake`, some additional "make[1]: ..." header is added,
# compared to entering only 'wmake' in shell.
CAPTURED_CMD1=`wmake`

# Remove 'make[1]' header
# Change output file from ' -o simpleFoam' to ' -o simpleFoam.so'
CAPTURED_CMD2=`echo "CAPTURED_CMD1" | sed -e '/^make\[.*$/d' -e "s| -o $DESTF| -o $DESTF.so -shared|" `
echo "/**********************************************************************/"
echo "CAPTURED_CMD1"
echo "$CAPTURED_CMD1"
echo "/*********************************/"
echo "CAPTURED_CMD2"
echo "$CAPTURED_CMD2"
echo "/*********************************/"
# sign \ is problem for simple $CAPTURED_CMD2, so pipe command to bash
echo "CAPTURED_CMD2" | bash
echo "/**********************************************************************/"
file $DESTF*

cd $BASEDIR
mkdir -p $ROOTFS/usr/lib
mkdir -p $ROOTFS/usr/bin
mkdir -p $ROOTFS/openfoam

cp $SRCDIR/platforms/$WM_OPTIONS/bin/simpleFoam.so  $ROOTFS/usr/bin

ldd $SRCDIR/platforms/$WM_OPTIONS/bin/simpleFoam | grep -Po '(?<=> )/[^ ]+' | sort | uniq | grep -Pv 'lib(c|gcc|dl|m|util|rt|pthread|stdc\+\+).so' | xargs -I {} install  {} $ROOTFS/usr/lib
# Also install libfieldFunctionObjects.so as it is not linked from the simpleFoam
install $SRCDIR/platforms/$WM_OPTIONS/lib/libfieldFunctionObjects.so $ROOTFS/usr/lib
install $SRCDIR/platforms/$WM_OPTIONS/lib/libforces.so $ROOTFS/usr/lib

# Copy the configuration files and scripts to the image.
cp -r $SRCDIR/etc $ROOTFS/openfoam

echo "
/usr/bin/simpleFoam.so: ${ROOTFS}/usr/bin/simpleFoam.so
/usr/lib/**: ${ROOTFS}/usr/lib/**
/openfoam/etc/**: $ROOTFS/openfoam/etc/**
" > usr.manifest

# Tu run the openfoam on OSv you need to upload the case explicitly with
# ./scripts/upload-case.py script.
# The script creates new copy of the image and uploads the case. The advantage
# is that the image is built only once.
